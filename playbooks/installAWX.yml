---
- name: AWX install 
  hosts: localhost
  collections:
   - ibm.cloudcollection
  tasks:

    - name: Fetch the variables from var file
      include_vars:
        file: vars.yml

    - name: Check if cluster Exists
      ibm_container_cluster_info:
        name: "{{ cluster_name }}"
      failed_when:
        - cluster_output.rc != 0
        - '"cluster could not be found" not in cluster_output.stderr'
      register: cluster_output

    - name: Save Cluster info
      set_fact:
        cluster_info: "{{ cluster_output.resource }}"

    - name: Get OpenShift Token Endpoint
      uri:
        url: "{{ cluster_info.public_service_endpoint_url}}/.well-known/oauth-authorization-server"
        method: Get
        body_format: json
      register: issuer_output

    - name: Get Openshift Token
      uri:
        url: "{{issuer_output.json.authorization_endpoint}}?client_id=openshift-challenging-client&response_type=token"
        method: GET
        user: apikey
        password: "{{ lookup('env', 'IC_API_KEY') }}"
        headers: 
          Content-Type: application/json
          X-CSRF-Token: "a"
        follow_redirects: none
        status_code: 
          - 302
      register: openshift_token
      no_log: true

    - name: Install AWX Operator
      command: "oc apply -f {{ lookup('env', 'PWD') }}/awx-operator.yaml"

    - name: Create new AWX project
      command: "oc new-project awx"
      ignore_errors: yes
      
    - name: Create AWX Instance
      uri: 
        url: "{{ cluster_info.public_service_endpoint_url}}/apis/awx.ansible.com/v1beta1/namespaces/awx/awxs/"
        method: POST
        body_format: json
        status_code: 
          - 200
          - 201
          - 409
        headers:
          Authorization: "Bearer {{ openshift_token.location.split('=')[1].split('&')[0] }}"
        body:
          apiVersion: awx.ansible.com/v1beta1
          kind: AWX
          metadata:
            name: awx
            namespace: awx
          spec:
            tower_ingress_type: Route